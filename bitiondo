#! /usr/bin/ruby

=begin

bitiondo

Descripcion: Primera entrega del lenguaje de programacion Bitiondo

Autores:
	Lautaro Villalon. 12-10427
	Yarima Luciani. 13-10770

=end


require_relative 'Lexer.rb'
require_relative 'Parser.rb'
require_relative 'semanticAnalyzer.rb'


def main
	ARGV[0] =~ /\w+\.bto/

	# VERIFICACION DE EXTENSION DE ARCHIVO
	if $&.nil?
		puts "ExtensiÃ³n desconocida."
		return
	end

	# VERIFICACION DE EXISTENCIA DE ARCHIVO
	if (!File.exist?(ARGV[0]))
		puts "Archivo no encontrado."
		return
	end

	# LECTURA POR ARREGLO DE LINEAS DE ARCHIVO
	file = IO.readlines(ARGV[0])

	# CORRIDA DEL LEXER
	lexer = Lexer.new(file)

	lexer.leer()

	# SI HAY ERRORES DE TOKENS, IMPRIME LOS ERRORES, CASO CONTRARIO, IMPRIME EL ARBOL SINTACTICO
	if (lexer.errorList.length > 0)
		for x in lexer.errorList
			x.toString()
		end

	else

		parser = Parser.new(lexer)
		ast = parser.parse	

		# IMPRESION DE TOKENS:
		#for x in lexer.tokens
		#	x.toString()
		#end

		semAnalyzer = AnalizadorSemantico.new(ast)
		semAnalyzer.analizar()

		# SI HAY ERRORES SEMANTICOS, IMPRIMIRLOS
		if (semAnalyzer.errores.length > 0)
			for x in semAnalyzer.errores
				x.to_s
			end
		else
			ast.printNodo(0)
		end
	end

end

main